[tool.poetry]
name = "pyai-caching"
version = "0.2.10"
description = "Redis-based caching for Pydantic AI LLM agents with cost tracking"
authors = ["Andrew de Jonge <talkingtoaj@hotmail.com>"]
readme = "README.md"
packages = [{include = "pyai_caching", from = "src"}]
include = ["src/pyai_caching/py.typed", "src/pyai_caching/*.pyi"]
license = "MIT"
keywords = ["llm", "caching", "redis", "ai", "cost-tracking"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.10"
redis = "*"
pydantic = "*"
typing-extensions = "*"
pydantic-ai = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-mock = "*"
pytest-cov = "*"
python-dotenv = "*"
black = "*"
ruff = "*"
mypy = "*"
pre-commit = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py39"
select = ["E", "F", "I", "N", "W", "B", "UP", "PL", "RUF"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true 